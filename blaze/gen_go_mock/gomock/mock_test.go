// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kahlys/battools/blaze/gen_go_mock/gomock (interfaces: MyObject)

// Package gomock is a generated GoMock package.
package gomock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMyObject is a mock of MyObject interface.
type MockMyObject struct {
	ctrl     *gomock.Controller
	recorder *MockMyObjectMockRecorder
}

// MockMyObjectMockRecorder is the mock recorder for MockMyObject.
type MockMyObjectMockRecorder struct {
	mock *MockMyObject
}

// NewMockMyObject creates a new mock instance.
func NewMockMyObject(ctrl *gomock.Controller) *MockMyObject {
	mock := &MockMyObject{ctrl: ctrl}
	mock.recorder = &MockMyObjectMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMyObject) EXPECT() *MockMyObjectMockRecorder {
	return m.recorder
}

// Foo mocks base method.
func (m *MockMyObject) Foo(arg0 int) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Foo indicates an expected call of Foo.
func (mr *MockMyObjectMockRecorder) Foo(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo", reflect.TypeOf((*MockMyObject)(nil).Foo), arg0)
}
