load("@rules_go//go:def.bzl", "go_library")
load("//blaze/codegen:generator.bzl", "chained_generator", "hello_generator")
load("//blaze/codegen:generator_rule.bzl", "mygenrule")

genrule(
    name = "genworld",
    outs = ["hello_world.go"],
    cmd = "$(location //blaze/codegen/generator:generator) -name world -out $@",
    tools = ["//blaze/codegen/generator"],
    visibility = [
        "//visibility:public",
    ],
)

genrule(
    name = "genbruce",
    outs = ["hello_bruce.go"],
    cmd = "$(location //blaze/codegen/generator:generator) -name bruce > $@",
    tools = ["//blaze/codegen/generator"],
)

hello_generator(
    name = "genmacrolion",
    arg = "lion",
)

hello_generator(
    name = "genmacrocat",
    arg = "cat",
)

hello_generator(
    name = "genmacrodog",
    arg = "dog",
)

chained_generator(
    name = "genchain",
    args = [
        "red",
        "blue",
        "green",
    ],
)

mygenrule(
    name = "gensea",
    param = "sea",
)

go_library(
    name = "go_hello",
    srcs = [":genworld"],
    importpath = "github.com/kahlys/battools/blaze/codegen/gen/hello",
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_hello_sea",
    srcs = [":gensea"],
    importpath = "github.com/kahlys/battools/blaze/codegen/gen/hello",
    visibility = ["//visibility:public"],
)

# gazelle:exclude hello_bruce.go
go_library(
    name = "codegen",
    srcs = ["hello_world.go"],
    importpath = "github.com/kahlys/battools/blaze/codegen/gen/hello",
    visibility = ["//visibility:public"],
)
